ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(data=mpls, mapping=aes(NULL, NULL, xmin = start, xmax =end, fill = V3),
ymin=0,ymax=16000, colour="white", size=0.5, alpha=0.2) +
scale_fill_manual(values=c("1" = "red", "0" = "blue")) +
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks")
mpls %>%
geom_rect(mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = "grey"),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
geom_rect(aes(NULL, NULL, xmin = start, xmax = end, fill = "grey"),
ymin = 0, ymax = 1000, data=mpls)
ggplot()+
geom_rect(mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = "grey"),
ymin = 0, ymax = 1000, data=mpls)
ggplot()+
geom_rect(mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = V3),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_rect(data=mpls, mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = V3),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_rect(data=mpls, mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = V3),
ymin = 0, ymax = 1000, data=V3)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_rect( mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = V3),
ymin = 0, ymax = 1000, data=V3)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_rect( mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = mpls$V3),
ymin = 0, ymax = 1000, data=mpls$V3)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_rect( mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = mpls$V3),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
scale_fill_manual(values=c("1" = "red", "0" = "blue")) +
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks")
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect( mapping=aes(NULL, NULL, xmin = start, xmax = end, fill = mpls$V3),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(aes(NULL, NULL, xmin = start, xmax = end, fill = mpls$V3),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(aes(NULL, NULL, xmin = 0, xmax = 33, fill = mpls$V3),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(aes(NULL, NULL, xmin = 0, xmax = 33, fill = V3),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(mapping=aes(NULL, NULL, xmin = 0, xmax = 33, fill = V3),
ymin = 0, ymax = 1000, data=mpls)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(mapping=aes(NULL, NULL, xmin = 0, xmax = 33, fill = V3),
ymin = 0, ymax = 1000, data=mpls, color=c("red", "blue"), alpha= 0.5)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(mapping=aes(NULL, NULL, xmin = 0, xmax = 33, fill = V3),
ymin = 0, ymax = 1000, data=mpls, color="red", alpha= 0.5)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(mapping=aes(NULL, NULL, xmin = 0, xmax = 33, fill = V3),
ymin = 0, ymax = 5, data=mpls, color="red", alpha= 0.5)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(mapping=aes(NULL, NULL, xmin = 0, xmax = 33, fill = V3),
ymin = 0, ymax = 6, data=mpls, color="red", alpha= 0.5)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(mapping=aes(NULL, NULL, xmin = V3[0], xmax = V3[8], fill = V3),
ymin = 0, ymax = 6, data=mpls, color="red", alpha= 0.5)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
geom_rect(mapping=aes(NULL, NULL, xmin = 0, xmax = 33, fill = V3),
ymin = 0, ymax = 6, data=mpls, color="red", alpha= 0.5)
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
scale_fill_manual(values=c("1" = "red", "0" = "blue")) +
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks")
mpls %>%
ggplot( aes(x=V1, y=V2))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks")
mpls %>%
ggplot( aes(x=V1, y=V2, color=V3))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks")
mpls %>%
ggplot( aes(x=V1, y=V2, color=V3))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks")
mpls %>%
ggplot( aes(x=V1, y=V2, color=as.factor(V3)))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks")
mpls %>%
ggplot( aes(x=V1, y=V2, color=as.factor(V3)))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks", subtitle = "With active weeks in red and inactive weeks in blue")
summary(fixed)
fixed <- plm(LifeSatisfaction ~ HHS+HHSsq+logHHI+logLivingSpace+WaveActive+Lag1+
Lag2+Lag3+Lead1+Lead2+Lead3, data=dfPanelData, index=c("Unit", "Weeks")
, model="within")
library(plm)
library(tidyverse)
library(plm)
library(tidyverse)
dfPanelData <- as.data.frame(PanelData)
names(dfPanelData)[1] <- "Unit"
names(dfPanelData)[2] <- "Weeks"
names(dfPanelData)[3] <- "HHS"
names(dfPanelData)[4] <- "HHSsq"
names(dfPanelData)[5] <- "logHHI"
names(dfPanelData)[6] <- "logLivingSpace"
names(dfPanelData)[7] <- "LifeSatisfaction"
names(dfPanelData)[8] <- "WaveActive"
names(dfPanelData)[9] <- "Lag1"
names(dfPanelData)[10] <- "Lag2"
names(dfPanelData)[11] <- "Lag3"
names(dfPanelData)[12] <- "Lead1"
names(dfPanelData)[13] <- "Lead2"
names(dfPanelData)[14] <- "Lead3"
fixed <- plm(LifeSatisfaction ~ HHS+HHSsq+logHHI+logLivingSpace+WaveActive+Lag1+
Lag2+Lag3+Lead1+Lead2+Lead3, data=dfPanelData, index=c("Unit", "Weeks")
, model="within")
dfPanelData
View(dfPanelData)
set.seed(12345)
library(truncnorm)
Participants=1000
Weeks <- 33
#Step 1 of the Creation of the simulated Panel, create 1000 individuals with a
#household size distribution similar to the german one by taking random numbers
#between 1 and 1000 and assinging a household size based on the number drawn
#with the distribution in respect to the percentage of households equal to that size.
RandHH <- round(runif(Participants, min= 1, max=1000), digits=0)
#Are the percentages with each household size exists in Germany
#according to destatis with 5 counting as all households larger than 5
#HHS = Household size
HHS <- matrix(ncol = 1, nrow=Participants)
for(i in 1:Participants) {
if(RandHH[i]<=423)HHS[i] <- 1
else if(RandHH[i]<=755)HHS[i] <- 2
else if(RandHH[i]<=874)HHS[i] <- 3
else if(RandHH[i]<=965)HHS[i] <- 4
else if(RandHH[i]<=1000)HHS[i] <- 5
}
#matrix with data for household sizes 1 til 5, the values 6 til 10 are the
#average netto income by each household size values 11 til 15 are the
#average living space per person for each household size
CompMatrix <- matrix(c(1,2,3,4,5, 2176, 4078, 5037, 5900, 5749, 68, 49, 33,33,33)
,nrow = 5, ncol = 3)
#Data Generation for the Constant data of the panel
FakeData <- matrix(nrow=Participants, ncol = 11)
weeklydata <- matrix(nrow=Participants, ncol = Weeks)
for (i in 1:Participants) {
FakeData[i,1] <- i #Unit ID
FakeData[i,2] <- HHS[i] #Unit Household size
FakeData[i,3] <- round(rtruncnorm(n=1, a=0, b=30000, mean=CompMatrix[HHS[i],2]
, sd=1000), digits=2)#householdincome
FakeData[i,4] <- round(rtruncnorm(n=1, a=20, b=120, mean=CompMatrix[HHS[i],3]
, sd=20), digits=0)#Living space per person
FakeData[i,5] <- round(rtruncnorm(n=1, a=0.2, b=1.8, mean=1, sd=0.6)
, digits=2) #Creating unobserved effects
#Creating the first Life Satisfaction Data for each Participant of the the
#Panel with assumptions made for the impact of each variable FakeDat[i,5]
#is adjusted to bring the mean of all observations to around 6.5
weeklydata[i,1] <- round(4.55*FakeData[i,5]+0.18*FakeData[i,2]-0.05*(FakeData[i,2]^2)
+0.2*log(FakeData[i,3])+0.12*log(FakeData[i,4]),digits = 2)
}
mean(weeklydata[,1])
#Corona week data + 3 lags and 3 leads
CoronaWeeks <- c(0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0)
#Create empty Matrix for the panel data
PanelData <- matrix(nrow=Weeks*1000,ncol= 14)
#Data Generation for each units life Satisfaction for each week and the
#simulation of sudden loss of income
for(i in 1:Participants){
for (j in 4:(Weeks+3)) {
individualweeklyerror <- round(rtruncnorm(n=1, a=-1, b=1, mean=0, sd=0.25), digits=2)
weeklydata[i,j-3] <- round(4.55*FakeData[i,5]+0.18*FakeData[i,2]-0.05*(FakeData[i,2]^2)+
0.2*log(FakeData[i,3])+0.12*log(FakeData[i,4])
,digits = 2)+individualweeklyerror
weeklydata[i,j-3] <- weeklydata[i,j-3]-0.3*CoronaWeeks[j]-0.15*CoronaWeeks[j-1]-
0.12*CoronaWeeks[j-2]-0.08*CoronaWeeks[j-3]-0.12*CoronaWeeks[j+1]-
0.06*CoronaWeeks[j+2]-0.02*CoronaWeeks[j+3]
#define z to get a control variable for each participant over all time periods
z <- i*33-33+j-3
#During Active Covid Chance of losing income divided by the income and  is
#the chance of getting the income halved
chanceloi <- runif(1, min= 1, max=1000)
lowpayrisk <- 16/FakeData[i,3]*1000
raise <- runif(1, min= 1, max=1000)
if(CoronaWeeks[j-3]==1){
if(chanceloi<=lowpayrisk){FakeData[i,3] <- 0.5*FakeData[i,3]
#If they dont lose half their income there is a 2 percent chance of
#getting a raise between 1 and 5%
}
}else if(raise<=20){
Payraise <- round(rtruncnorm(n=1, a=1.01, b=1.05, mean=1.03, sd=0.05), digits=2)
FakeData[i,3] <- FakeData[i,3]*Payraise
}
PanelData[z,5] <- FakeData[i,3]
if(weeklydata[i,j-3]<=0){weeklydata[i,j-3] <- 0}
if(weeklydata[i,j-3]>=10){weeklydata[i,j-3] <- 10}
}
}
mean(weeklydata[,32])
activeweeks <- c("no","no","no","no","no","no","no","no","yes","yes","yes","yes","yes","yes","yes","yes","yes","yes","yes","yes","yes","no","no","no","no","no","no","no","no","no","no","no","no")
meanparticipantlifesat <- matrix(nrow=3, ncol=33)
for(i in 1:33){
meanparticipantlifesat[1,i] <- i
meanparticipantlifesat[2,i] <- mean(weeklydata[,i])
if(activeweeks[i]== "no"){
meanparticipantlifesat[3,i] <- 0
}else {
meanparticipantlifesat[3,i] <- 1
}
}
plot(meanparticipantlifesat[1,],meanparticipantlifesat[2,],xlab="Week",
ylab="Life Satisfaction")
mpls1 <- t(meanparticipantlifesat)
mpls <- as.data.frame(mpls1, row.names = c("Weeks", "LifeSat", "Active"))
mpls %>%
ggplot( aes(x=V1, y=V2, color=as.factor(V3)))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks", subtitle = "With active weeks in red and inactive weeks in blue")
for (x in 1:Participants) {
for (y in 1:Weeks) {
z <- x*33-33+y
PanelData[z,1] <- FakeData[x,1]
PanelData[z,2] <- y
PanelData[z,3] <- FakeData[x,2] #HHS
PanelData[z,4] <- FakeData[x,2]^2 #HHSsq
PanelData[z,5] <- log(PanelData[z,4]) #logHHI
PanelData[z,6] <- log(FakeData[x,4]) #logLivingSpacepP
PanelData[z,7] <- weeklydata[x,y] #Life Satisfaction
PanelData[z,8] <- CoronaWeeks[y+3] #Binary Data, if third wave is active or not
PanelData[z,9] <- CoronaWeeks[y+2] #Lag 1
PanelData[z,10] <- CoronaWeeks[y+1] #Lag 2
PanelData[z,11] <- CoronaWeeks[y] #Lag 3
PanelData[z,12] <- CoronaWeeks[y+4] #Lead 1
PanelData[z,13] <- CoronaWeeks[y+5] #Lead 2
PanelData[z,14] <- CoronaWeeks[y+6] #Lead 3
}
}
dfPanelData <- as.data.frame(PanelData)
names(dfPanelData)[1] <- "Unit"
names(dfPanelData)[2] <- "Weeks"
names(dfPanelData)[3] <- "HHS"
names(dfPanelData)[4] <- "HHSsq"
names(dfPanelData)[5] <- "logHHI"
names(dfPanelData)[6] <- "logLivingSpace"
names(dfPanelData)[7] <- "LifeSatisfaction"
names(dfPanelData)[8] <- "WaveActive"
names(dfPanelData)[9] <- "Lag1"
names(dfPanelData)[10] <- "Lag2"
names(dfPanelData)[11] <- "Lag3"
names(dfPanelData)[12] <- "Lead1"
names(dfPanelData)[13] <- "Lead2"
names(dfPanelData)[14] <- "Lead3"
fixed <- plm(LifeSatisfaction ~ HHS+HHSsq+logHHI+logLivingSpace+WaveActive+Lag1+
Lag2+Lag3+Lead1+Lead2+Lead3, data=dfPanelData, index=c("Unit", "Weeks")
, model="within")
summary(fixed)
View(dfPanelData)
set.seed(12345)
library(truncnorm)
Participants=1000
Weeks <- 33
#Step 1 of the Creation of the simulated Panel, create 1000 individuals with a
#household size distribution similar to the german one by taking random numbers
#between 1 and 1000 and assinging a household size based on the number drawn
#with the distribution in respect to the percentage of households equal to that size.
RandHH <- round(runif(Participants, min= 1, max=1000), digits=0)
#Are the percentages with each household size exists in Germany
#according to destatis with 5 counting as all households larger than 5
#HHS = Household size
HHS <- matrix(ncol = 1, nrow=Participants)
for(i in 1:Participants) {
if(RandHH[i]<=423)HHS[i] <- 1
else if(RandHH[i]<=755)HHS[i] <- 2
else if(RandHH[i]<=874)HHS[i] <- 3
else if(RandHH[i]<=965)HHS[i] <- 4
else if(RandHH[i]<=1000)HHS[i] <- 5
}
#matrix with data for household sizes 1 til 5, the values 6 til 10 are the
#average netto income by each household size values 11 til 15 are the
#average living space per person for each household size
CompMatrix <- matrix(c(1,2,3,4,5, 2176, 4078, 5037, 5900, 5749, 68, 49, 33,33,33)
,nrow = 5, ncol = 3)
#Data Generation for the Constant data of the panel
FakeData <- matrix(nrow=Participants, ncol = 11)
weeklydata <- matrix(nrow=Participants, ncol = Weeks)
for (i in 1:Participants) {
FakeData[i,1] <- i #Unit ID
FakeData[i,2] <- HHS[i] #Unit Household size
FakeData[i,3] <- round(rtruncnorm(n=1, a=0, b=30000, mean=CompMatrix[HHS[i],2]
, sd=1000), digits=2)#householdincome
FakeData[i,4] <- round(rtruncnorm(n=1, a=20, b=120, mean=CompMatrix[HHS[i],3]
, sd=20), digits=0)#Living space per person
FakeData[i,5] <- round(rtruncnorm(n=1, a=0.2, b=1.8, mean=1, sd=0.6)
, digits=2) #Creating unobserved effects
#Creating the first Life Satisfaction Data for each Participant of the the
#Panel with assumptions made for the impact of each variable FakeDat[i,5]
#is adjusted to bring the mean of all observations to around 6.5
weeklydata[i,1] <- round(4.55*FakeData[i,5]+0.18*FakeData[i,2]-0.05*(FakeData[i,2]^2)
+0.2*log(FakeData[i,3])+0.12*log(FakeData[i,4]),digits = 2)
}
#Corona week data + 3 lags and 3 leads
CoronaWeeks <- c(0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0)
#Create empty Matrix for the panel data
PanelData <- matrix(nrow=Weeks*1000,ncol= 14)
#Data Generation for each units life Satisfaction for each week and the
#simulation of sudden loss of income
for(i in 1:Participants){
for (j in 4:(Weeks+3)) {
individualweeklyerror <- round(rtruncnorm(n=1, a=-1, b=1, mean=0, sd=0.25), digits=2)
weeklydata[i,j-3] <- round(4.55*FakeData[i,5]+0.18*FakeData[i,2]-0.05*(FakeData[i,2]^2)+
0.2*log(FakeData[i,3])+0.12*log(FakeData[i,4])
,digits = 2)+individualweeklyerror
weeklydata[i,j-3] <- weeklydata[i,j-3]-0.3*CoronaWeeks[j]-0.15*CoronaWeeks[j-1]-
0.12*CoronaWeeks[j-2]-0.08*CoronaWeeks[j-3]-0.12*CoronaWeeks[j+1]-
0.06*CoronaWeeks[j+2]-0.02*CoronaWeeks[j+3]
#define z to get a control variable for each participant over all time periods
z <- i*33-33+j-3
#During Active Covid Chance of losing income divided by the income and  is
#the chance of getting the income halved
chanceloi <- runif(1, min= 1, max=1000)
lowpayrisk <- 16/FakeData[i,3]*1000
raise <- runif(1, min= 1, max=1000)
if(CoronaWeeks[j-3]==1){
if(chanceloi<=lowpayrisk){FakeData[i,3] <- 0.5*FakeData[i,3]
#If they dont lose half their income there is a 2 percent chance of
#getting a raise between 1 and 5%
}
}else if(raise<=20){
Payraise <- round(rtruncnorm(n=1, a=1.01, b=1.05, mean=1.03, sd=0.05), digits=2)
FakeData[i,3] <- FakeData[i,3]*Payraise
}
PanelData[z,5] <- FakeData[i,3]
if(weeklydata[i,j-3]<=0){weeklydata[i,j-3] <- 0}
if(weeklydata[i,j-3]>=10){weeklydata[i,j-3] <- 10}
}
}
activeweeks <- c("no","no","no","no","no","no","no","no","yes","yes","yes","yes","yes","yes","yes","yes","yes","yes","yes","yes","yes","no","no","no","no","no","no","no","no","no","no","no","no")
meanparticipantlifesat <- matrix(nrow=3, ncol=33)
for(i in 1:33){
meanparticipantlifesat[1,i] <- i
meanparticipantlifesat[2,i] <- mean(weeklydata[,i])
if(activeweeks[i]== "no"){
meanparticipantlifesat[3,i] <- 0
}else {
meanparticipantlifesat[3,i] <- 1
}
}
mpls1 <- t(meanparticipantlifesat)
mpls <- as.data.frame(mpls1, row.names = c("Weeks", "LifeSat", "Active"))
mpls %>%
ggplot( aes(x=V1, y=V2, color=as.factor(V3)))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave", y="Life Satisfaction", x="Weeks", subtitle = "With active weeks in red and inactive weeks in blue")
![Study of Life Satisfaction in Germany 2020](../Downloads/Lebenszufriedenheit_nach_Corona_Ereignissen_DP.jpg)
summary(fixed)
mpls$V3 <- as.factor(mpls$V3)
mpls %>%
ggplot( aes(x=V1, y=V2, color=V3))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave"
, y="Life Satisfaction", x="Weeks"
, subtitle = "With active weeks in red and inactive weeks in blue")
names(mpls[3]) <- "Corona wave active"
mpls[3]
mpls %>%
ggplot( aes(x=V1, y=V2, color=V3))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave"
, y="Life Satisfaction", x="Weeks"
, subtitle = "With active weeks in red and inactive weeks in blue")
names(mpls)[3] <- "Corona wave active"
mpls[3]
mpls %>%
ggplot( aes(x=V1, y=V2, color="Corona wave active"))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave"
, y="Life Satisfaction", x="Weeks"
, subtitle = "With active weeks in red and inactive weeks in blue")
names(mpls)[3] <- "coronawave"
mpls %>%
ggplot( aes(x=V1, y=V2, color=coronawave))+
scale_color_manual(breaks = c("1", "0"),
values=c("red", "blue"))+
geom_point()+
labs(title="Life Satisfaction before, during and after a third coronoavirus wave"
, y="Life Satisfaction", x="Weeks"
, subtitle = "With active weeks in red and inactive weeks in blue")
---
title: "R Notebook"
output: html_notebook
---
```{r}
install.packages("tidyverse")
library(tidyverse)
wage <- read_dta("C:/Users/johan/Iecon41/data/wage2.dta")
```
PROBLEM 1.1
```{r}
model1<-lm(lwage~educ+exper,wage2)
summary(model1)
wage2$res1<-resid(model1)
summary(wage2$res1)
```
PROBLEM 2
```{r}
model2<-lm(educ~exper,wage2)
summary(model2)
wage2$res2<-resid(model2)
model2<-lm(educ~exper,wage2)
model3<-lm(lwage~res2,wage2)
summary(model3)
```
PROBLEM 3
```{r}
#Model with all parameters
model4<-lm(lwage~educ+exper+age+tenure+urban+south+sibs,wage2)
summary(model4)
```
PROBLEM 4
```{r}
#Transformation into Logarithmic hourly Wages
wage2$wage_h<-wage2$wage/(wage2$hours*4.34821)
wage2$lwage_h<-log(wage2$wage_h)
model5<-lm(lwage_h~educ+exper+age+tenure+urban+south+sibs,wage2)
#Models for different Subgroups/sets
#Married& Black person
summary(lm(model5,wage2,subset=(wage2$married==1 & wage2$black==1)))
#married & white person
summary(lm(model5,wage2,subset=(wage2$married==1 & wage2$black==0)))
#Not married white person
summary(lm(model5,wage2,subset=(wage2$married==0 & wage2$black==0)))
#Not married black person
summary(lm(model5,wage2,subset=(wage2$married==0 & wage2$black==1)))
```
PROBLEM 5
```{r}
#Regression of Tenure on Education
Model6<-lm(tenure~educ,wage2)
Model7<-lm(lwage~educ+tenure,wage2)
model8<-lm(lwage~educ+tenure,wage2)
```
Problem 6
```{r}
model9<-lm(hours~lwage_h+age+educ+married,wage2)
summary(model9)
summary(wage2$lwage_h)
```
```{r}
#Elasticity at Mean value of log hourly wage
-7.252902/1.538776
```
```{r}
install.packages("margins")
library(haven)
card <- read_dta("C:/Users/johan/Downloads/card.dta")
View(card)
setwd("C:/Users/johan/Git_Visualisierung/")
d <- read.csv("data.csv")
View(d)
